version: '3.4'

services:
  eureka-server:
    build:
      context: eserver
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

  configserver:
    build:
      context: configserver
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      WAITFORIT_HOST: eureka-server
      WAITFORIT_PORT: 8761
      WAITFORIT_TIMEOUT: 30
    depends_on:
      - eureka-server

  postgres:
    image: postgres
    restart: always
    logging:
      driver: none
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: JavaLabs3
      PGPORT: 5432
    volumes:
      - /docker-volumes/postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  client:
    build:
      context: eclient
      dockerfile: Dockerfile
    ports:
      - "8081-8082:8081"
    environment:
      WAITFORIT_HOST: configserver
      WAITFORIT_PORT: 8888
      WAITFORIT_TIMEOUT: 60
    depends_on:
      - eureka-server
      - postgres
      - configserver

  gateway:
    build:
      context: apigateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      WAITFORIT_HOST: configserver
      WAITFORIT_PORT: 8888
      WAITFORIT_TIMEOUT: 60
    depends_on:
      - eureka-server
      - client
      - configserver

  kafka-consumer:
    build:
      context: kafka-consumer
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      WAITFORIT_HOST: kafka
      WAITFORIT_PORT: 9092
      WAITFORIT_TIMEOUT: 120
    depends_on:
      - kafka

  rabbit:
    image: rabbitmq:3
    ports:
      - "15672:15672"
      - "5672:5672"
      
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
    - "9090:9090"
    - "9080:9080"
  
  grafana:
    image: grafana/grafana
    ports:
    - "3000:3000"
    
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "create.entity:3:1,update.entity:3:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    depends_on:
      - zookeeper